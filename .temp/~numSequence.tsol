pragma ever-solidity >= 0.61.2;
pragma AbiHeader expire;
pragma AbiHeader pubkey;


contract numSequence {
    uint8[] public arr;
    uint16 public sum;
    event complete(uint8[] arr);

    constructor(uint8 len) public {
        tvm.accept();
        sum = 0;
        for(uint i=0; i < len; i++){
            arr.push(rnd.next(255));
            sum += arr[i];
        }
    }

    function check(uint inputNum) public{
        tvm.accept();
        uint sum_Arr;//배열의 합
        for(uint i=0; i < arr.length; i++){
            sum_Arr += arr[i];
        }

        //합이 맞는지 판단 필요
        require(sum_Arr != inputNum,1001);
        //generate new sequence
        sum = 0;
        for(uint i=0; i < arr.length; i++){
            delete arr[i];
        }
        for(uint i=0; i < arr.length; i++){
            arr.push(rnd.next(255));
            sum += arr[i];
        }

        //성공하면 event emit
        emit complete(arr);
    }
}