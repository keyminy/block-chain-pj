.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
LDU 8
ENDS
.loc ../contracts/numSequence.tsol, 12
ACCEPT
.loc ../contracts/numSequence.tsol, 13
PUSHINT 0
SETGLOB 11
.loc ../contracts/numSequence.tsol, 14
PUSHINT 0
PUSHCONT {
	PUSH2 S0, S1
	LESS
}
PUSHCONT {
	.loc ../contracts/numSequence.tsol, 15
	GETGLOB 10
	PUSHPOW2DEC 8
	RAND
	NEWC
	STU 8
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 10
	.loc ../contracts/numSequence.tsol, 16
	DUP
	GETGLOB 10
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 8
	GETGLOB 11
	ADD
	UFITS 16
	SETGLOB 11
	.loc ../contracts/numSequence.tsol, 14
	INC
	.loc ../contracts/numSequence.tsol, 0
}
WHILE
DROP2
.loc ../contracts/numSequence.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro check
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/numSequence.tsol, 20
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
ENDS
.loc ../contracts/numSequence.tsol, 0
CALLREF {
	CALL $check_5f72f450_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	check_5f72f450_internal
.type	check_5f72f450_internal, @function
CALL $check_5f72f450_internal_macro$

.macro check_5f72f450_internal_macro
.loc ../contracts/numSequence.tsol, 21
ACCEPT
.loc ../contracts/numSequence.tsol, 22
PUSHINT 0
DUP
.loc ../contracts/numSequence.tsol, 23
PUSHCONT {
	DUP
	GETGLOB 10
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/numSequence.tsol, 24
	DUP
	GETGLOB 10
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 8
	PUSH S2
	ADD
	POP S2
	.loc ../contracts/numSequence.tsol, 23
	INC
	.loc ../contracts/numSequence.tsol, 0
}
WHILE
DROP
.loc ../contracts/numSequence.tsol, 28
NEQ
THROWIFNOT 1001
.loc ../contracts/numSequence.tsol, 30
PUSHINT 0
SETGLOB 11
.loc ../contracts/numSequence.tsol, 31
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 10
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/numSequence.tsol, 32
	GETGLOB 10
	UNPAIR
	PUXC S2, S-1
	PUSH2 S1, S2
	LESS
	THROWIFNOT 50
	NEWC
	STSLICECONST x00
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 10
	.loc ../contracts/numSequence.tsol, 31
	INC
	.loc ../contracts/numSequence.tsol, 0
}
WHILE
DROP
.loc ../contracts/numSequence.tsol, 34
PUSHINT 0
PUSHCONT {
	DUP
	GETGLOB 10
	FIRST
	LESS
}
PUSHCONT {
	.loc ../contracts/numSequence.tsol, 35
	GETGLOB 10
	PUSHPOW2DEC 8
	RAND
	NEWC
	STU 8
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSETB
	PAIR
	SETGLOB 10
	.loc ../contracts/numSequence.tsol, 36
	DUP
	GETGLOB 10
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 8
	GETGLOB 11
	ADD
	UFITS 16
	SETGLOB 11
	.loc ../contracts/numSequence.tsol, 34
	INC
	.loc ../contracts/numSequence.tsol, 0
}
WHILE
DROP
.loc ../contracts/numSequence.tsol, 40
GETGLOB 10
PUSHSLICE xc00000000000000000000000004246eec6
NEWC
STSLICE
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/numSequence.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 16
ENDS
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 0
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STU 16
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro arr
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000009bb8d4ff
	NEWC
	STSLICE
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro sum
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000fd5a74cf
	NEWC
	STSLICE
	STU 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 465097983
EQUAL
IFJMPREF {
	CALL $arr$
}
DUP
PUSHINT 1031083290
EQUAL
IFJMPREF {
	CALL $check$
}
DUP
PUSHINT 1851494252
EQUAL
IFJMPREF {
	CALL $constructor$
}
DUP
PUSHINT 2103080143
EQUAL
IFJMPREF {
	CALL $sum$
}

