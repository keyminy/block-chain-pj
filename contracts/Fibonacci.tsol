pragma ever-solidity >= 0.61.2;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

contract Fibonacci {

    uint static _nonce; 

    uint firstNumber = 0;
    uint secondNumber = 1;
    uint[] public fibo_arr;

    event stateChange(uint firstNumber, uint secondNumber);

    constructor() public {
        tvm.accept();
        fibo_arr.push(firstNumber);
        fibo_arr.push(secondNumber);
    }

    function setNumber(uint _newNumber) public{
        require(firstNumber + secondNumber == _newNumber,101);
        firstNumber = secondNumber;
        secondNumber = _newNumber;
        emit stateChange(firstNumber, secondNumber);
    }

    function calculateNextNumber() external returns (uint[]) {
        uint _nextNumber = firstNumber + secondNumber;
        fibo_arr.push(_nextNumber);
        return fibo_arr;
    }

}